# The is the ASYN example for communication to 4 simulated motors
# "#!" marks lines that can be uncommented.
#
# run with ../../bin/${EPICS_HOST_ARCH}/motorSim.exe

< envPaths

# save_restore.cmd needs the full path to the startup directory, which
# envPaths currently does not provide
epicsEnvSet(STARTUP,$(TOP)/iocBoot/$(IOC))

dbLoadDatabase("$(TOP)/dbd/WithAsyn.dbd")
WithAsyn_registerRecordDeviceDriver(pdbbase)

##dbLoadDatabase("$(TOP)/dbd/motorSim.dbd")
##motorSim_registerRecordDeviceDriver(pdbbase)

##dbLoadTemplate("motor.substitutions.local")
dbLoadRecords("$(TOP)/db/motorSimTest.db")


### save_restore setup
# We presume a suitable initHook routine was compiled into xxx.munch.
# See also create_monitor_set(), after iocInit() .
#< save_restore.cmd

# Create simulated motors: ( start card , start axis , low limit, high limit, home posn, # cards, # axes to setup)
motorSimCreate( 0, 0, -32000, 32000, 0, 1, 4 )
# Setup the Asyn layer (portname, low-level driver drvet name, card, number of axes on card)
drvAsynMotorConfigure("motorSim1", "motorSim", 0, 4)

#motorSimCreateController("motorSim2", 8)
#asynSetTraceIOMask("motorSim2", 0, 4)
#asynSetTraceMask("motorSim2", 0, 255)

# motorSimConfigAxis(port, axis, lowLimit, highLimit, home, start)
#motorSimConfigAxis("motorSim2", 0, 20000, -20000,  500, 0)
#motorSimConfigAxis("motorSim2", 1, 20000, -20000, 1500, 0)
#motorSimConfigAxis("motorSim2", 2, 20000, -20000, 2500, 0)
#motorSimConfigAxis("motorSim2", 3, 20000, -20000, 3000, 0)
iocInit

# save positions every five seconds
#create_monitor_set("auto_positions.req",5,"P=$(MYPVPREFIX)")
# save other things every thirty seconds
#create_monitor_set("auto_settings.req",30,"P=$(MYPVPREFIX)")

### Start the saveData task.
#saveData_Init("saveData.req", "P=$(MYPVPREFIX)")
